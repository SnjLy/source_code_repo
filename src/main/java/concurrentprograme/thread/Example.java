package concurrentprograme.thread;import concurrentprograme.interrupt.Thread1;/** * 1、mainA + counter.add()  同步,一次只有一个线程运行counter.add() * 2、mainA + counter.addNotSyn()  线程各自运行，不同步，会出现数据错误ThreadThread-1count=4+3=9                                                                  ThreadThread-0count=6+3=12 * 3、mainB + counter.add()          线程各自运行，不存在竞争，不会相互影响数据count * 4、mainB + counter.addNotSyn()    线程各自运行，不存在竞争，不会相互影响数据count * Created by yehao on 2017/4/10. */public class Example {    //mainA    public static void main(String[] args) {        Counter counter = new Counter();        CounterThread thread1 = new CounterThread(counter);        CounterThread thread2 = new CounterThread(counter);        thread1.start();        thread2.start();    }    //mainB    /*public static void main(String[] args) {        CounterThread thread1 = new CounterThread(new Counter());        CounterThread thread2 = new CounterThread(new Counter());        thread1.start();        thread2.start();    }*/}class Counter{    long count = 0;    public synchronized void add(long value){        System.out.print("Thread"+Thread.currentThread().getName()+"count="+count+"+"+value+"=");        this.count += value;        System.out.println(count);    }    public void addNotSyn(long value){        System.out.print("Thread"+Thread.currentThread().getName()+"count="+count+"+"+value+"=");        this.count += value;        System.out.println(count);    }}class CounterThread extends Thread{    private Counter counter = null;    public CounterThread(Counter counter){        this.counter = counter;    }    public void run(){        for(int i=0;i<10; i++){            //counter.add(i);            counter.addNotSyn(i);        }    }}